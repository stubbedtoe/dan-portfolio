---
export const prerender = false;

import { getCollection } from 'astro:content';
import { Picture } from 'astro:assets';
import Page from '../../layouts/Page.astro';
import { ClientRouter } from 'astro:transitions';
import FilterButton from '../../components/FilterButton.astro';

const works = await getCollection('portfolio', ({ data }) => data.active);
const sortedWorks = works.sort((a, b) => a.data.order - b.data.order);

const activeCategories = sortedWorks.reduce(
    (acc, curr) =>
        curr.data.category.reduce((found, category) => (found.includes(category) ? found : [...found, category]), acc),
    [] as string[]
);

const { searchParams, pathname } = new URL(Astro.request.url);

let visible: string[] = [];
const fromParams = searchParams.get('q');
if (fromParams) {
    visible = fromParams.split(',').filter((category) => activeCategories.includes(category));
}
const noCategories = visible.length === 0;

const filters = activeCategories.map((category) => {
    if (visible.includes(category)) {
        const without = visible.filter((c) => c !== category);
        return {
            // link to it without the category
            href: `${pathname}${without.length > 0 ? '?q=' + without.join(',') : ''}`,
            active: true,
            category,
        };
    } else {
        const _with = [...visible, category];
        return {
            href: `${pathname}?q=${_with.join(',')}`,
            active: false,
            category,
        };
    }
});

const filteredWorks = sortedWorks.filter(({ data }) => {
    if (noCategories) {
        return true;
    }
    return data.category.some((category) => visible.includes(category));
});
---

<Page title="Portfolio" permalink="/portfolio" columns={1}>
    <style slot="head-slot">
        img {
            height: auto;
            aspect-ratio: 1;
        }
    </style>
    <ClientRouter slot="head-slot" />

    <div class="w-full md:w-2/3 mx-auto mb-4">
        <span>Filters: </span>
        {
            filters.map((filter) => (
                <FilterButton href={filter.href} active={filter.active}>
                    {filter.category}
                </FilterButton>
            ))
        }
    </div>

    <div class="portfolio w-full md:w-2/3 sm:columns-2 lg:columns-3 gap-x-4 gap-y-4 m-auto">
        {
            filteredWorks.map(({ data }, index) => {
                // correct american spelling
                const position = data.areaOfInterest === 'centre' ? 'center' : data.areaOfInterest;

                return (
                    <a
                        href={`/portfolio/${data.id}`}
                        title={data.title}
                        class="aspect-square"
                        data-astro-prefetch="hover"
                    >
                        <Picture
                            src={data.image}
                            alt={data.title}
                            priority={index < 6}
                            layout="responsive"
                            background="blurhash"
                            fit="cover"
                            {position}
                            class={`mb-4 ${position}`}
                            widths={[300, 500, 700]}
                            sizes="(min-width: 650px) 300px, (max-width: 500px) 500px, (max-width: 400px) 700px"
                        />
                    </a>
                );
            })
        }
    </div>
</Page>
