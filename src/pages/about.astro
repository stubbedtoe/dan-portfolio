---
import { Image } from 'astro:assets';
import exhibitions from '../content/exhibitions.json';
import awards from '../content/awards.json';
import about from '../content/about.json';
import Page from '../layouts/Page.astro';
import { markdown } from '@astropub/md';
import { getCollection } from 'astro:content';
import AboutSection from '../components/AboutSection.astro';
import ExhibitionSection from '../components/ExhibitionSection.astro';
import type { Exhibition } from '../components/ExhibitionSection.astro';

interface Award {
    year: string;
    award: string;
}

const sortedAwards = awards.sort((a: Award, b: Award) => {
    const dateA = Date.parse(a.year);
    const dateB = Date.parse(b.year);
    return dateB - dateA;
});

const aboutImages = await getCollection('aboutImages');

const soloExibitions = exhibitions.filter((e) => e.typeOfExhibition === 'Solo') as Exhibition[];
const groupExhibitions = exhibitions.filter((e) => e.typeOfExhibition === 'Group') as Exhibition[];
---

<Page title="About" permalink="/about" description="">
    <style slot="head-slot">
        img {
            height: auto;
        }
    </style>
    {
        aboutImages.length > 0 && (
            <div slot="left-side" class="w-full md:w-1/2 flex-col mt-12">
                {aboutImages.map(({ data }) => (
                    <Image
                        inferSize={true}
                        src={data.image}
                        alt={data.alt}
                        priority={true}
                        background="blurhash"
                        fit="contain"
                        layout="full-width"
                        class="w-full h-auto my-6"
                        widths={[200, 300, 400]}
                        sizes="(max-width: 399px) 200px, (min-width: 400px) 300px, (min-width: 800px) 400px"
                    />
                ))}
            </div>
        )
    }
    {
        about.statement && (
            <AboutSection heading="Artist's Statement">
                <div class="flex-col gap-2">{await markdown(about.statement)}</div>
            </AboutSection>
        )
    }
    {
        sortedAwards.length > 0 && (
            <AboutSection heading="Awards">
                <ul class="leading-8">
                    {sortedAwards.map(async ({ year, award }) => (
                        <li class="flex">
                            <span class="font-bold w-[50px]">{new Date(year).getFullYear()}</span>
                            <span>{await markdown(award)}</span>
                        </li>
                    ))}
                </ul>
            </AboutSection>
        )
    }
    <ExhibitionSection heading="Solo Exhibitions" exhibitions={soloExibitions} />
    <ExhibitionSection heading="Selected Group Exhibitions" exhibitions={groupExhibitions} />
</Page>
